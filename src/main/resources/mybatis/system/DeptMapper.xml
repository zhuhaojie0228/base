<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tnkj.project.system.dept.mapper.DeptMapper">

	<resultMap type="Dept" id="DeptResult">
		<id     property="id"     column="id"     />
		<result property="name"   column="name"   />
		<result property="shortName"   column="short_name"   />
		<result property="parentId"   column="parent_id"   />
		<result property="parentName"   column="parent_name"   />
		<result property="parentLevel"   column="parent_level"   />
		<result property="level"  column="level"   />
		<result property="kind"  column="kind"   />
		<result property="classid"  column="classid"   />
		<result property="phone"   column="phone"   />
		<result property="sort"   column="sort"   />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="remark"    column="remark"    />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.id,d.name,d.short_name,d.parent_id,d.level,d.kind,d.classid,d.phone,d.sort,d.status,d.del_flag,d.remark,d.create_by,d.create_time
        from sys_dept d
    </sql>
    
	<select id="selectRoleDeptTree" parameterType="Long" resultType="String">
		select concat(d.id, d.name) as dept_name
		from sys_dept d
			left join sys_role_dept rd on d.id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.sort
	</select>
	
	<select id="selectDeptList" parameterType="Dept" resultMap="DeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
		<if test="id != null and id != ''">
			AND id = #{id}
		</if>
        <if test="parentId != null and parentId != ''">
			AND parent_id = #{parentId}
		</if>
		<if test="name != null and name != ''">
			AND name like concat('%', #{name}, '%')
		</if>
		<if test="level != null and level != ''">
			AND level = #{level}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by CAST(d.level AS UNSIGNED),d.sort
    </select>

	<select id="selectWorkDeptList" parameterType="Dept" resultMap="DeptResult">
		select d.id,d.name,d.short_name,d.parent_id,d.level,d.kind,d.classid,d.phone,d.sort,d.status,d.del_flag,d.remark,d.create_by,d.create_time
		from sys_dept d left join sys_dept d1 on d.parent_id=d1.id
		where d.del_flag = '0' and d.level='10' and d1.level='9'
		<if test="id != null and id != ''">
			AND d.id = #{id}
		</if>
		<if test="parentId != null and parentId != ''">
			AND d.parent_id = #{parentId}
		</if>
		<if test="name != null and name != ''">
			AND d.name like concat('%', #{name}, '%')
		</if>
		<if test="status != null and status != ''">
			AND d.status = #{status}
		</if>
		or d.level='6' or (d.level='9' and d1.level='6')
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by CAST(d.level AS UNSIGNED),d.sort
	</select>

	<select id="selectWorkByDept" parameterType="Dept" resultMap="DeptResult">
		select d.id,d.name,d.short_name,d.parent_id,d.level,d.kind,d.classid,d.phone,d.sort,d.status,d.del_flag,d.remark,d.create_by,d.create_time
		from sys_dept d left join sys_dept d1 on d.parent_id=d1.id
		where d.del_flag = '0' and d.level='10' and d1.level='9'
		<if test="name != null and name != ''">
			AND d.name like concat('%', #{name}, '%')
		</if>
		<if test="status != null and status != ''">
			AND d.status = #{status}
		</if>
		<if test="id != null and id != ''">
			AND d.id = #{id} or d.id=#{remark}
		</if>
		<if test="parentId != null and parentId != ''">
			AND d.parent_id = #{parentId} or d.id=#{parentId}
		</if>
		or d.level='6'
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by CAST(d.level AS UNSIGNED),d.sort
	</select>
	
	<select id="checkDeptExistUser" parameterType="String" resultType="int">
		select count(1) from sys_user where dept_id = #{id} and del_flag = '0'
	</select>
	
	<select id="selectDeptCount" parameterType="Dept" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0'
		<if test="id != null and id != ''"> and id = #{id} </if>
		<if test="parentId != null and parentId != ''"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDeptNameUnique" resultMap="DeptResult">
	    <include refid="selectDeptVo"/>
		where name=#{name} and parent_id = #{parentId}
	</select>

	<select id="selectDeptById" parameterType="String" resultMap="DeptResult">
		select d.id,d.name,d.short_name,d.parent_id,d.level,d.kind,d.classid,d.phone,d.sort,d.status,d.del_flag,d.remark,
			(select name from sys_dept where id = d.parent_id) parent_name,
			(select level from sys_dept where id = d.parent_id) parent_level
		from sys_dept d
		where d.id = #{deptId}
	</select>
	
	<select id="selectChildrenDeptById" parameterType="String" resultMap="DeptResult">
		select * from sys_dept where find_in_set(#{deptId}, ancestors)
	</select>
	
	<insert id="insertDept" parameterType="Dept">
 		insert into sys_dept(
 			<if test="id != null and id != ''">id,</if>
		    <if test="name != null and name != ''">name,</if>
			<if test="shortName != null and shortName != ''">short_name,</if>
			<if test="parentId != null and parentId != ''">parent_id,</if>
			<if test="level != null and level != ''">level,</if>
			<if test="kind != null and kind != ''">kind,</if>
			<if test="classid != null and classid != ''">classid,</if>
			<if test="phone != null and phone != ''">phone,</if>
			<if test="sort != null">sort,</if>
			<if test="status != null and status != ''">status,</if>
			<if test="remark != null">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="id != null and id != ''">#{id},</if>
			<if test="name != null and name != ''">#{name},</if>
			<if test="shortName != null and shortName != ''">#{shortName},</if>
			<if test="parentId != null and parentId != ''">#{parentId},</if>
			<if test="level != null and level != ''">#{level},</if>
			<if test="kind != null and kind != ''">#{kind},</if>
			<if test="classid != null and classid != ''">#{classid},</if>
			<if test="phone != null and phone != ''">#{phone},</if>
			<if test="sort != null">#{sort},</if>
 			<if test="status != null and status != ''">#{status},</if>
			<if test="remark != null">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="Dept">
 		update sys_dept
 		<set>
 			<if test="name != null and name != ''">name = #{name},</if>
			<if test="shortName != null and shortName != ''">short_name = #{shortName},</if>
			<if test="level != null">level = #{level},</if>
			<if test="kind != null">kind = #{kind},</if>
			<if test="classid != null">classid = #{classid},</if>
			<if test="phone != null and phone != ''">phone = #{phone},</if>
			<if test="sort != null">sort = #{sort},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
			<if test="remark != null">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where id = #{id}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	 </update>

	<delete id="deleteDeptById" parameterType="String">
		update sys_dept set del_flag = '2' where id = #{deptId}
	</delete>
	
	<update id="updateDeptStatus" parameterType="Dept">
 	    update sys_dept
 	    <set>
 	        <if test="status != null and status != ''">status = #{status},</if>
 	        <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 	        update_time = sysdate()
        </set>
 	    where id in (${ancestors})
	</update>

	<select id="selectCurSort" resultType="Long">
        select (max(sort)+1) as sort from sys_dept
    </select>

</mapper> 